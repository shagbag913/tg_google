#!/usr/bin/env bash
#
# UNOBVIOUS DEPENDENCIES:
# tg_bot; from my dotfiles repo https://github.com/shagbag913/dotfiles/blob/master/.bin/tg_bot

DEBUG=$1

##
# Factory image / OTA download URL's
FACTURL="https://developers.google.com/android/images"
OTAURL="https://developers.google.com/android/ota"

##
# Contents of URL's
FACTURLCONTENT=$(curl $FACTURL)
OTAURLCONTENT=$(curl $OTAURL)

##
# List of supported devices
DEVICES="crosshatch blueline taimen walleye marlin sailfish ryu angler bullhead"

##
# Google's sourcecode
GOOGLEGIT="https://android.googlesource.com"

build_id() {
    BUILDID_FILE="./devices/$1/build_ids"
    [[ -f $(dirname $BUILDID_FILE) ]] || mkdir -p $(dirname $BUILDID_FILE)
    OLD_BUILDIDS=$(cat $BUILDID_FILE)
    NEW_BUILDIDS=$(echo "$FACTURLCONTENT" | sed -n 's/<tr id="'"$1"'//p' | sed -n 's/">//p' | cut -d ' ' -f 3)
    if [[ "$OLD_BUILDIDS" != "$NEW_BUILDIDS" && -n "$NEW_BUILDIDS" ]]; then
        NEW_BUILDID=$(diff -u <(echo "$NEW_BUILDIDS") <(echo "$OLD_BUILDIDS") | sed -n '1!p' | sed -n 's/^-//p')
        echo "$NEW_BUILDIDS" > $BUILDID_FILE
    else
        return 1
    fi
}

tags() {
    TAG_FILE="./tags/$1/tags"
    [[ -f $(dirname $TAG_FILE) ]] || mkdir -p $(dirname $TAG_FILE)
    OLD_TAGS=$(cat $TAG_FILE)
    NEW_TAGS=$(git ls-remote --refs --tags $GOOGLEGIT/$1 | sed -n 's/.*refs\/tags\///p')
    if [[ "$NEW_TAGS" != "$OLD_TAGS" && -n "$NEW_TAGS" ]]; then
        NEW_TAG=$(diff -u <(echo "$NEW_TAGS") <(echo "$OLD_TAGS") | tail -n +3 | grep -e ^- -e ^+)
        echo "$NEW_TAGS" > $TAG_FILE
    else
        return 1
    fi
}

for device in $DEVICES; do
    if build_id $device; then
        for id in $NEW_BUILDID; do
            echo "new $id for $device"
            FACT_BUILDURL=$(echo "$FACTURLCONTENT" | sed -n 's/.*<td><a href=\"//p' | tr -d '"' | grep "$device-$id")
            FACTIMAGE_URLS="$FACTIMAGE_URLS $FACT_BUILDURL"
            OTA_BUILDURL=$(echo "$OTAURLCONTENT" | sed -n 's/.*<td><a href=\"//p' | sed -n 's/">.*//p' | grep "$device-ota-$id")
            MSG="\`$id\` has been released.%0A    - Factory image: [Download]($FACT_BUILDURL)%0A    - OTA: [Download]($OTA_BUILDURL)%0A$MSG"
        done
        MSG="%0A*$device*%0A$MSG"
    fi
done

REPOS=(
    'platform/manifest'
    'kernel/msm'
)

for repo in "${REPOS[@]}"; do
    if tags $repo; then
        for tag in $NEW_TAG; do
            if echo $tag | grep ^-; then
                TAG=$(sed -n 's/^-//p' <<< $tag)
                MSG="    - New tag: [$TAG]($GOOGLEGIT/$repo/%2B/$TAG)%0A$MSG"
            elif echo $tag | grep ^+; then
                TAG=$(sed -n 's/^+//p' <<< $tag)
                TAG=$(sed 's/_/\\_/p' <<< $TAG | head -n 1)
                MSG="    - Tag removed: $TAG%0A$MSG"
            fi
        done
        MSG="%0A*$repo*%0A$MSG"
    fi
done

if [[ -n $MSG ]]; then
    if [[ $DEBUG = false ]]; then
        tg_bot -p pm -p au -m "$MSG"
    else
        tg_bot -p pm -m "$MSG"
    fi
fi

if [[ -n $FACTIMAGE_URLS ]]; then
    for i in $FACTIMAGE_URLS; do
        ./getimages $i $DEBUG
    done
fi
